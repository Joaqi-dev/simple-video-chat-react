{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaqi\\\\super-duper-app\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst servers = {\n  iceServers: [{\n    urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302']\n  }]\n};\nlet pc = new RTCPeerConnection(servers);\nlet localStream = null;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.displayVideo = this.displayVideo.bind(this);\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      apiResponse: \"\"\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  async displayVideo() {\n    const webcamVideo = this.myRef.current;\n    localStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n    localStream.getTracks().forEach(track => {\n      pc.addTrack(track, localStream);\n    });\n    webcamVideo.srcObject = localStream;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"App-body\",\n        children: [\"hi\", /*#__PURE__*/_jsxDEV(Box, {\n          className: \"hostVideo\",\n          p: 2,\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: this.myRef,\n            autoplay: \"true\",\n            playsinline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.displayVideo,\n          children: \"Turn on Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"App-intro\",\n          children: this.state.apiResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Joaqi/super-duper-app/client/src/App.js"],"names":["React","Component","Box","servers","iceServers","urls","pc","RTCPeerConnection","localStream","App","constructor","props","displayVideo","bind","myRef","createRef","state","apiResponse","callAPI","fetch","then","res","text","setState","componentWillMount","webcamVideo","current","navigator","mediaDevices","getUserMedia","video","audio","getTracks","forEach","track","addTrack","srcObject","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,IAAI,EAAE,CAAC,+BAAD,EAAkC,+BAAlC;AADR,GADU;AADE,CAAhB;AAQA,IAAIC,EAAE,GAAG,IAAIC,iBAAJ,CAAsBJ,OAAtB,CAAT;AACA,IAAIK,WAAW,GAAG,IAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACzCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,gBAAad,KAAK,CAACe,SAAN,EAAb;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACRC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAACN,MAAAA,WAAW,EAAEI;AAAd,KAAd,CAFf;AAGD;;AAGDG,EAAAA,kBAAkB,GAAE;AAChB,SAAKN,OAAL;AACH;;AAEiB,QAAZN,YAAY,GAAE;AAClB,UAAMa,WAAW,GAAG,KAAKX,KAAL,CAAWY,OAA/B;AACAlB,IAAAA,WAAW,GAAG,MAAMmB,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAACC,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAApC,CAApB;AAEAvB,IAAAA,WAAW,CAACwB,SAAZ,GAAwBC,OAAxB,CAAiCC,KAAD,IAAW;AACzC5B,MAAAA,EAAE,CAAC6B,QAAH,CAAYD,KAAZ,EAAmB1B,WAAnB;AACD,KAFD;AAIAiB,IAAAA,WAAW,CAACW,SAAZ,GAAwB5B,WAAxB;AACD;;AAED6B,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAG,UAAlB;AAAA,sCAIE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAG,WAAjB;AAA6B,UAAA,CAAC,EAAI,CAAlC;AAAA,iCACC;AAAO,YAAA,GAAG,EAAI,KAAKvB,KAAnB;AAA0B,YAAA,QAAQ,EAAG,MAArC;AAA4C,YAAA,WAAW;AAAvD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAQ,UAAA,OAAO,EAAI,KAAKF,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE;AAAG,UAAA,SAAS,EAAG,WAAf;AAAA,oBAA4B,KAAKI,KAAL,CAAWC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA9CwC","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\n\nconst servers = {\n  iceServers: [\n    {\n      urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n    },\n  ],\n};\n\nlet pc = new RTCPeerConnection(servers);\nlet localStream = null;\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.displayVideo = this.displayVideo.bind(this);\n    this.myRef = React.createRef();\n    this.state = {apiResponse: \"\"};\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\")\n      .then(res => res.text())\n      .then(res => this.setState({apiResponse: res}));\n  }\n\n\n  componentWillMount(){\n      this.callAPI();\n  }\n\n  async displayVideo(){\n    const webcamVideo = this.myRef.current;\n    localStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\n\n    localStream.getTracks().forEach((track) => {\n      pc.addTrack(track, localStream);\n    });\n\n    webcamVideo.srcObject = localStream;\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <body className = \"App-body\">\n          hi\n      \n              \n          <Box className = \"hostVideo\" p = {2}>\n           <video ref = {this.myRef} autoplay = 'true' playsinline></video>\n          </Box>\n          <button onClick = {this.displayVideo}>Turn on Camera</button>\n\n          <p className = \"App-intro\">{this.state.apiResponse}</p>\n        </body>\n       </div>\n     );\n  }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}