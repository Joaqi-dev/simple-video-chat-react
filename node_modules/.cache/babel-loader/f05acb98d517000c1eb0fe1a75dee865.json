{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joaqi\\\\Desktop\\\\super-duper-app\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Peer from 'peerjs';\nimport { io } from 'socket.io-client';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket = io('192.168.254.128:8000');\nlet localStream = null;\nvar peer = new Peer(Math.floor(Math.random() * 90000000), {\n  path: \"/peerjs\",\n  host: \"localhost\",\n  port: \"8000\"\n});\nconst Button = styled.button`  \nbackground-color: black;\ncolor: white;\nfont-size: 20px;\npadding: 10px 60px;\nborder-radius: 5px;\nmargin: 10px 0px;\ncursor: pointer;`;\n_c = Button;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.displayVideo = this.displayVideo.bind(this);\n    this.callUser = this.callUser.bind(this);\n    this.connectToUser = this.connectToUser.bind(this);\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.remoteRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      roomId: \"123456\"\n    };\n  }\n\n  callAPI() {// fetch(\"http://localhost:9000/testAPI\")\n    //   .then(res => res.text())\n    //   .then(res => this.setState({roomId: res}));\n  }\n\n  async componentDidMount() {\n    // this.callAPI();\n    console.log(peer.id);\n    this.displayVideo();\n    peer.on(\"open\", () => {\n      console.log(`my Id is ${peer.id}`);\n      socket.emit(\"join-room\", this.state.roomId, peer.id);\n    });\n    this.callUser();\n  }\n\n  async callUser() {\n    socket.on(\"user-connected\", userId => {\n      console.log(\"connected to user\");\n      this.connectToUser(userId, localStream);\n    });\n    const partnerVideo = this.remoteRef.current;\n    peer.on(\"call\", call => {\n      console.log(\"turned on call listener\");\n      call.answer(localStream);\n      call.on(\"stream\", userVideoStream => {\n        console.log(\"nigga\");\n        partnerVideo.srcObject = userVideoStream;\n      });\n    });\n  }\n\n  connectToUser(userId, stream) {\n    const partnerVideo = this.remoteRef.current;\n    const call = peer.call(userId, stream);\n    console.log(\"nigger\");\n    call.on(\"stream\", userVideoStream => {\n      console.log(\"nibber\");\n      partnerVideo.srcObject = userVideoStream;\n    });\n  }\n\n  async displayVideo() {\n    const webcamVideo = this.myRef.current;\n    localStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n    webcamVideo.srcObject = localStream;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"hostVideo\",\n          p: 2,\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: this.myRef,\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.displayVideo,\n          children: \"Turn on Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.callUser,\n          children: \"Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"userVideo\",\n          p: 2,\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: this.remoteRef,\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"App-intro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/Joaqi/Desktop/super-duper-app/client/src/App.js"],"names":["React","Component","Box","Peer","io","styled","socket","localStream","peer","Math","floor","random","path","host","port","Button","button","App","constructor","props","displayVideo","bind","callUser","connectToUser","myRef","createRef","remoteRef","state","roomId","callAPI","componentDidMount","console","log","id","on","emit","userId","partnerVideo","current","call","answer","userVideoStream","srcObject","stream","webcamVideo","navigator","mediaDevices","getUserMedia","video","audio","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Peer from 'peerjs';\nimport { io } from 'socket.io-client';\nimport styled from 'styled-components';\n\nlet socket = io('192.168.254.128:8000');\nlet localStream = null;\nvar peer = new Peer(Math.floor(Math.random() * 90000000), {\n  path: \"/peerjs\",\n  host: \"localhost\",\n  port: \"8000\",\n});\n\n\n\nconst Button = styled.button`  \nbackground-color: black;\ncolor: white;\nfont-size: 20px;\npadding: 10px 60px;\nborder-radius: 5px;\nmargin: 10px 0px;\ncursor: pointer;`;\n\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.displayVideo = this.displayVideo.bind(this);\n    this.callUser = this.callUser.bind(this);\n    this.connectToUser = this.connectToUser.bind(this);\n    this.myRef = React.createRef();\n    this.remoteRef = React.createRef();\n    this.state = {roomId: \"123456\"};\n  }\n\n  callAPI() {\n    // fetch(\"http://localhost:9000/testAPI\")\n    //   .then(res => res.text())\n    //   .then(res => this.setState({roomId: res}));\n  }\n\n\n  async componentDidMount(){\n      // this.callAPI();\n      console.log(peer.id);\n      this.displayVideo();\n      peer.on(\"open\", () =>{\n        console.log(`my Id is ${peer.id}`);\n        socket.emit(\"join-room\", this.state.roomId, peer.id);\n      });\n      this.callUser();\n  }\n\n  async callUser(){\n    socket.on(\"user-connected\", (userId) => {\n      console.log(\"connected to user\");\n      this.connectToUser(userId, localStream);\n    });\n\n    const partnerVideo = this.remoteRef.current;\n    peer.on(\"call\", (call) => {\n      console.log(\"turned on call listener\");\n      call.answer(localStream);\n      call.on(\"stream\", (userVideoStream)=> {\n        console.log(\"nigga\");\n        partnerVideo.srcObject = userVideoStream;\n      });\n    });\n  }\n\n  connectToUser(userId, stream){\n    const partnerVideo = this.remoteRef.current;\n    const call = peer.call(userId, stream);\n    console.log(\"nigger\");\n    call.on(\"stream\", (userVideoStream)=> {\n      console.log(\"nibber\");\n      partnerVideo.srcObject = userVideoStream;\n    });\n  }\n\n  async displayVideo(){\n    const webcamVideo = this.myRef.current;\n    localStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\n\n    webcamVideo.srcObject = localStream;\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <body className = \"App-body\">\n          \n      \n              \n          <Box className = \"hostVideo\" p = {2}>\n           <video ref = {this.myRef} autoPlay playsInline></video>\n          </Box>\n\n          <Button onClick = {this.displayVideo}>Turn on Camera</Button>\n          <Button onClick = {this.callUser}>Call</Button>\n\n          <Box className = \"userVideo\" p = {2}>\n          <video ref = {this.remoteRef} autoPlay playsInline></video>\n          </Box>\n          <p className = \"App-intro\"></p>\n        </body>\n       </div>\n     );\n  }\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}